name: Api
on:
  push:
    branches:
      - master
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goosarch:
          - 'linux/amd64'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Swag install
        run: go install github.com/swaggo/swag/cmd/swag@latest
      - name: Http-swagger
        run: go get github.com/swaggo/http-swagger
      - name: Swagger template
        run: go get github.com/alecthomas/template
      - name: Swagger init
        run: swag init -g cmd/auth/auth-service.go
      - name: Tidy
        run: go mod tidy -compat=1.17
      - name: Get OS and arch info
        run: |
          PROJECT_NAME=intensive-rest-api
          CGO_ENABLED=0
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=$PROJECT_NAME-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -ldflags '-extldflags "-static"' -o "$BINARY_NAME" cmd/auth/auth-service.go
      - name: Pack release
        run: |
          zip -r -Z bzip2 zipdir/$BINARY_NAME.zip docs $BINARY_NAME
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Draft ${{ github.ref }}
          body_path: ".github/RELEASE-TEMPLATE.md"
          draft: true
          files: |
            zipdir/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Swag install
        run: go install github.com/swaggo/swag/cmd/swag@latest
      - name: Http-swagger
        run: go get github.com/swaggo/http-swagger
      - name: Swagger template
        run: go get github.com/alecthomas/template
      - name: Swagger init
        run: swag init -g cmd/auth/auth-service.go
      - name: Tidy
        run: go mod tidy -compat=1.17
      - name: Build
        run: |
          mkdir -p dist
          CGO_ENABLED=0 GOARCH=amd64 GOOS=linux go build -ldflags '-extldflags "-static"' -o dist/lin cmd/auth/auth-service.go
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/12Lev/intensive-rest-api:1.0.0
